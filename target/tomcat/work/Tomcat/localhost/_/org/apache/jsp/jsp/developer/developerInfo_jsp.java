/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-01-28 19:16:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.developer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import domain.Developer;
import java.util.Set;
import domain.Skill;
import domain.Project;
import domain.Company;

public final class developerInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Информация о разработчике</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
Developer developer = (Developer) request.getAttribute("developer");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container w3-blue w3-center\">\r\n");
      out.write("    <a href=\"/developers\" class=\"w3-button w3-margin w3-large w3-yellow w3-left\">Разработчики</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container w3-blue w3-center\">\r\n");
      out.write("    <h1>Разработчик ");
      out.print(developer.getName());
      out.write(' ');
      out.write(' ');
      out.print(developer.getSurname());
      out.write("</h1>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container w3-center w3-blue\">\r\n");
      out.write("    <h2>Глобальная информация</h2>\r\n");
      out.write("    <p>Имя: ");
      out.print(developer.getName());
      out.write("</p>\r\n");
      out.write("    <p>Фамилия: ");
      out.print(developer.getSurname());
      out.write("</p>\r\n");
      out.write("    ");

        String sex = null;
        if (developer.getSex().toString() == "male") sex = "Мужской";
        else sex = "Женский";
    
      out.write("\r\n");
      out.write("    <p>Пол: ");
      out.print(sex);
      out.write("</p>\r\n");
      out.write("    <p>Зарплата: ");
      out.print(developer.getSalary());
      out.write(" $</p>\r\n");
      out.write("    ");

        Company company = developer.getCompany();
        if (company == null) out.print("<p>Компания: Отсутствует</p>");
        else{
            out.print("<a href=\"/company_info?id=" + company.getId() +"\">Компания: "  + company.getName() + "</a>");
            out.print("</br>");
        }
    
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("<br/>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container w3-center w3-light-blue w3-large\">\r\n");
      out.write("    <h2>Навыки: </h2>\r\n");
      out.write("    <div class=\"w3-container w3-left w3-light-blue w3-large\">\r\n");
      out.write("        ");
Set<Skill> skills = developer.getSkills();
            if (skills.isEmpty()) out.print("<p> - Навыков нет </p>");
            else{
                for (Skill skill : skills){
                    out.print("<a href=\"/skill_info?id=" + skill.getId() +"\">" + skill.getId() + ". " + skill.getSkill() +
                            " " + skill.getSkillLevel() + "</a>");
                    out.print("</br>");
                }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br/>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<div class=\"w3-container w3-center w3-light-blue w3-large\">\r\n");
      out.write("    <h2>Проекты: </h2>\r\n");
      out.write("    <div class=\"w3-container w3-left w3-light-blue w3-large\">\r\n");
      out.write("        ");
Set<Project> projects = developer.getProjects();
            if (projects.isEmpty()) out.print("<p> - Проектов нет </p>");
            else{
                for (Project project : projects){
                    out.print("<a href=\"/project_info?id=" + project.getId() +"\">" + project.getId() + ". " +
                            project.getProjectName() + "</a>");
                    out.print("</br>");
                }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
